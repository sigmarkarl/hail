.. _sec-api:

==========
Python API
==========

This is the API documentation for ``Pipeline``, and provides detailed information
on the Python programming interface.

Use ``import hailtop.pipeline`` to access this functionality.


.. currentmodule:: hailtop.pipeline


Pipelines
~~~~~~~~~

A :class:`.Pipeline` is an object that represents the set of tasks to run
and the order or dependencies between the tasks. Each :class:`.Task` has bash commands
to execute, a docker container in which to execute them, and settings for storage,
memory, and CPU.

.. autosummary::
    :toctree: api/pipelines/
    :nosignatures:
    :template: class.rst

    pipeline.Pipeline
    task.Task


Resources
~~~~~~~~~

A :class:`.Resource` is an abstract class that represents files in a :class:`.Pipeline` and
has two subtypes: :class:`.ResourceFile` and :class:`.ResourceGroup`.

A single file is represented by a :class:`.ResourceFile` which has two subtypes:
:class:`.InputResourceFile` and :class:`.TaskResourceFile`. An InputResourceFile is used
to specify files that are inputs to a :class:`.Pipeline`. These files are not generated as outputs from a
:class:`.Task`. Likewise, a TaskResourceFile is a file that is produced by a task. TaskResourceFiles
generated by one task can be used in subsequent tasks, creating a dependency between the tasks.

A :class:`.ResourceGroup` represents a collection of files that should be treated as one unit. All files
share a common root, but each file has its own extension.


.. autosummary::
    :toctree: api/resources/
    :nosignatures:
    :template: class.rst

    resource.Resource
    resource.ResourceFile
    resource.InputResourceFile
    resource.TaskResourceFile
    resource.ResourceGroup


Backends
~~~~~~~~

A :class:`.Backend` is an abstract class that can execute a :class:`.Pipeline`. Currently,
there are two types of backends: :class:`.LocalBackend` and :class:`.BatchBackend`. The
local backend executes a pipeline on your local computer by running a shell script. The Batch
backend executes a pipeline on Google Compute Engine VMs operated by the Hail team
(:ref:`Batch Service <sec-batch-service>`). You can access the UI for the Batch Service
at `<batch.hail.is>`_.

.. autosummary::
    :toctree: api/backend/
    :nosignatures:
    :template: class.rst

    backend.Backend
    backend.LocalBackend
    backend.BatchBackend