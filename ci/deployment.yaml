apiVersion: apps/v1
kind: Deployment
metadata:
  name: ci
  labels:
    app: ci
    hail.is/sha: "{{ code.sha }}"
spec:
  selector:
    matchLabels:
      app: ci
  replicas: 1
  template:
    metadata:
      labels:
        app: ci
        hail.is/sha: "{{ code.sha }}"
    spec:
{% if deploy %}
      priorityClassName: production
{% endif %}
      nodeSelector:
        preemptible: "false"
      containers:
        - name: ci
          image: "{{ ci_image.image }}"
          resources:
            requests:
              memory: "1G"
              cpu: "1"
          env:
           - name: HAIL_DEPLOY_CONFIG_FILE
             value: /deploy-config/deploy-config.json
           - name: HAIL_CI_OAUTH_TOKEN
             value: /secrets/oauth-token/oauth-token
{% if deploy %}
           - name: HAIL_WATCHED_BRANCHES
             value: '[["hail-is/hail:master",true]]'
{% else %}
           - name: HAIL_WATCHED_BRANCHES
             value: '[["hail-ci-test/ci-test-{{create_ci_test_repo.token}}:master", true]]'
{% endif %}
           - name: HAIL_GCP_PROJECT
             value: "{{ global.project }}"
           - name: HAIL_GCP_ZONE
             value: "{{ global.zone }}"
           - name: HAIL_CI_UTILS_IMAGE
             value: "{{ ci_utils_image.image }}"
           - name: HAIL_IP
             value: "{{ global.ip }}"
           - name: HAIL_DOMAIN
             value: "{{ global.domain }}"
           - name: HAIL_DEFAULT_NAMESPACE
             value: "{{ default_ns.name }}"
           - name: HAIL_BATCH_PODS_NAMESPACE
             value: "{{ batch_pods_ns.name }}"
           - name: KUBERNETES_SERVER_URL
             value: "{{ global.k8s_server_url }}"
          ports:
            - containerPort: 5000
          volumeMounts:
           - mountPath: /deploy-config
             name: deploy-config
             readOnly: true
           - name: session-secret-key
             mountPath: /session-secret-key
             readOnly: true
           - mountPath: /ci-user-secret
             name: ci-user-secret
             readOnly: true
           - mountPath: /secrets/oauth-token
             name: hail-ci-0-1-github-oauth-token
             readOnly: true
           - mountPath: /user-tokens
             name: ci-tokens
             readOnly: true
           - mountPath: /zulip-config
             name: zulip-config
             readOnly: true
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: 5000
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: 5000
            initialDelaySeconds: 5
            periodSeconds: 5
      volumes:
       - name: deploy-config
         secret:
           secretName: deploy-config
       - name: session-secret-key
         secret:
           optional: false
           secretName: session-secret-key
       - name: ci-user-secret
         secret:
           optional: false
           secretName: "{{ ci_database.user_secret_name }}"
       - name: hail-ci-0-1-github-oauth-token
         secret:
           secretName: hail-ci-0-1-github-oauth-token
       - name: ci-tokens
         secret:
           secretName: ci-tokens
       - name: zulip-config
         secret:
           secretName: zulip-config
---
apiVersion: v1
kind: Service
metadata:
  name: ci
  labels:
    app: ci
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 5000
  selector:
    app: ci
