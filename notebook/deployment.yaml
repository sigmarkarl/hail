apiVersion: v1
kind: ServiceAccount
metadata:
  name: notebook
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: notebook
rules:
 - apiGroups: [""]
   resources: ["pods"]
   verbs: ["*"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: notebook-notebook
subjects:
 - kind: ServiceAccount
   name: notebook
roleRef:
  kind: Role
  name: notebook
  apiGroup: ""
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notebook
  labels:
    app: notebook
    hail.is/sha: "{{ code.sha }}"
spec:
  selector:
    matchLabels:
      app: notebook
  replicas: 3
  template:
    metadata:
      labels:
        app: notebook
        hail.is/sha: "{{ code.sha }}"
    spec:
      serviceAccountName: notebook
{% if deploy %}
      priorityClassName: production
{% endif %}
      nodeSelector:
        preemptible: "true"
      tolerations:
       - key: preemptible
         value: "true"
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - notebook
              topologyKey: "kubernetes.io/hostname"
      containers:
       - name: notebook
         image: "{{ notebook_image.image }}"
         resources:
           requests:
             memory: 200Mi
             cpu: 100m
           limits:
             memory: 200Mi
             cpu: "1"
         env:
          - name: HAIL_DEPLOY_CONFIG_FILE
            value: /deploy-config/deploy-config.json
          - name: HAIL_DOMAIN
            value: "{{ global.domain }}"
          - name: HAIL_NOTEBOOK_NAMESPACE
            value: "{{ default_ns.name }}"
          - name: HAIL_NOTEBOOK_WORKER_IMAGE
            value: gcr.io/hail-vdc/hail-jupyter:latest
         ports:
          - containerPort: 5000
         volumeMounts:
          - name: deploy-config
            mountPath: /deploy-config
            readOnly: true
          - name: session-secret-key
            mountPath: /session-secret-key
            readOnly: true
          - name: sql-config
            mountPath: /sql-config
            readOnly: true
      volumes:
       - name: deploy-config
         secret:
           optional: false
           secretName: deploy-config
       - name: session-secret-key
         secret:
           optional: false
           secretName: session-secret-key
       - name: sql-config
         secret:
           optional: false
           secretName: "{{ notebook_database.user_secret_name }}"
---
apiVersion: v1
kind: Service
metadata:
  name: notebook
  labels:
    app: notebook
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5000
  selector:
    app: notebook
---
apiVersion: v1
kind: Service
metadata:
  name: workshop
  labels:
    app: workshop
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5000
  selector:
    app: notebook
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: notebook
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: notebook
  minReplicas: 3
  maxReplicas: 10
  metrics:
   - type: Resource
     resource:
       name: cpu
       targetAverageUtilization: 80
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: notebook
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: notebook
