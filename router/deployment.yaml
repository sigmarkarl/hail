apiVersion: v1
kind: Service
metadata:
  name: site
  labels:
    app: site
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: site
---
apiVersion: v1
kind: Service
metadata:
  name: scorecard
  labels:
    app: scorecard
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5000
  selector:
    app: scorecard
---
apiVersion: v1
kind: Service
metadata:
  name: batch
  labels:
    app: batch
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5000
  selector:
    app: batch
---
apiVersion: v1
kind: Service
metadata:
  name: batch
  labels:
    app: batch
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5000
  selector:
    app: batch
---
apiVersion: v1
kind: Service
metadata:
  name: batch-driver
  labels:
    app: batch-driver
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5000
  selector:
    app: batch-driver
---
apiVersion: v1
kind: Service
metadata:
  name: ci
  labels:
    app: ci
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 5000
  selector:
    app: ci
---
apiVersion: v1
kind: Service
metadata:
  name: upload
  labels:
    app: upload
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5000
  selector:
    app: upload
---
apiVersion: v1
kind: Service
metadata:
  name: notebook
  labels:
    app: notebook
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5000
  selector:
    app: notebook
---
apiVersion: v1
kind: Service
metadata:
  name: auth
  labels:
    app: auth
spec:
  ports:
   - port: 80
     protocol: TCP
     targetPort: 5000
  selector:
    app: auth
---
apiVersion: v1
kind: Service
metadata:
  name: blog
  labels:
    app: blog
spec:
  ports:
   - port: 80
     protocol: TCP
     targetPort: 2368
  selector:
    app: blog
---
apiVersion: v1
kind: Service
metadata:
  name: workshop
  labels:
    app: workshop
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5000
  selector:
    app: notebook
---
apiVersion: v1
kind: Service
metadata:
  name: scheduler
  labels:
    app: scheduler
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 5000
  - name: executor
    port: 5051
    protocol: TCP
    targetPort: 5051
  - name: client-submit
    port: 5052
    protocol: TCP
    targetPort: 5052
  - name: client-result
    port: 5053
    protocol: TCP
    targetPort: 5053
  selector:
    app: scheduler
---
apiVersion: v1
kind: Service
metadata:
  name: hello
  labels:
    app: hello
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 5000
  selector:
    app: hello
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: router
  labels:
    app: router
    hail.is/sha: "{{ code.sha }}"
spec:
  selector:
    matchLabels:
      app: router
  replicas: 3
  template:
    metadata:
      labels:
        app: router
        hail.is/sha: "{{ code.sha }}"
    spec:
{% if deploy %}
      priorityClassName: production
{% endif %}
      nodeSelector:
        preemptible: "true"
      tolerations:
       - key: preemptible
         value: "true"
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - router
              topologyKey: "kubernetes.io/hostname"
      containers:
       - name: router
         image: {{ router_image.image }}
         resources:
           requests:
             memory: "100M"
             cpu: "100m"
           limits:
             memory: "250M"
             cpu: "1"
         env:
          - name: HAIL_DOMAIN
            value: {{ global.domain }}
          - name: HAIL_DEFAULT_NAMESPACE
            value: {{ default_ns.name }}
         ports:
          - containerPort: 80
         readinessProbe:
           httpGet:
             path: /healthcheck
             port: 80
           initialDelaySeconds: 5
           periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: router
  labels:
    app: router
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: router
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: router
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: router
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      targetAverageUtilization: 80
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: router
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: router
