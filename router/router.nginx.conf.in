server_names_hash_bucket_size 128;

map $http_x_forwarded_proto $updated_scheme {
     default $http_x_forwarded_proto;
     '' $scheme;
}

map $http_x_forwarded_host $updated_host {
     default $http_x_forwarded_host;
     '' $http_host;
}

server {
    server_name @domain@ www.* site.*;

    location = /healthcheck {
      return 204;
    }

    location / {
        proxy_pass http://site/;
    }

    listen 80 default_server;
    listen [::]:80 default_server;
}

server {
    server_name scorecard.*;

    location / {
        proxy_pass http://scorecard/;
    }

    listen 80;
    listen [::]:80;
}

server {
    server_name ci.*;

    location ~ /(test-ci-[a-z0-9]+)/(.*) {
        resolver kube-dns.kube-system.svc.cluster.local;
        proxy_pass http://$1.batch-pods.svc.cluster.local/$2;
    }

    location / {
        proxy_pass http://ci/;
    }

    listen 80;
    listen [::]:80;
}

server {
    server_name scheduler.*;

    location / {
        proxy_pass http://scheduler/;
    }

    listen 80;
    listen [::]:80;
}

server {
    server_name hello.*;

    location / {
        proxy_pass http://hello/;
    }

    listen 80;
    listen [::]:80;
}

server {
    server_name batch.*;
    client_max_body_size 8m;

    location / {
        proxy_pass http://batch/;
    }

    listen 80;
    listen [::]:80;
}

server {
    server_name batch-driver.*;

    location / {
        proxy_pass http://batch-driver/;
    }

    listen 80;
    listen [::]:80;
}

server {
    server_name notebook.*;

    # needed to correctly handle error_page with internal handles
    recursive_error_pages on;

    location = /auth {
        internal;
        proxy_pass http://notebook@notebook_base_path@/auth/$notebook_token;
    }

    location ~ @notebook_base_path@/instance/([^/]+)/(.*) {
        set $notebook_token $1;
        auth_request /auth;
        auth_request_set $auth_pod_ip $upstream_http_pod_ip;

        proxy_pass http://$auth_pod_ip$request_uri;

	proxy_set_header Host $updated_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_redirect off;
        proxy_buffering off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 86400;

        proxy_connect_timeout 5s;

        proxy_intercept_errors on;
        error_page 401 403 502 504 = @error;
    }

    location @error {
    	return 302 $updated_scheme://$updated_host@notebook_base_path@/error;
    }

    location / {
        proxy_pass http://notebook;

	# don't set Host, notebook dispatches off domain
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_redirect off;
        proxy_buffering off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 86400;
    }

    listen 80;
    listen [::]:80;
}

server {
    server_name workshop.*;

    # needed to correctly handle error_page with internal handles
    recursive_error_pages on;

    location = /auth {
        internal;
        proxy_pass http://workshop@workshop_base_path@/auth/$notebook_token;
    }

    location ~ @workshop_base_path@/instance/([^/]+)/(.*) {
        set $notebook_token $1;
        auth_request /auth;
        auth_request_set $auth_pod_ip $upstream_http_pod_ip;

        proxy_pass http://$auth_pod_ip$request_uri;

	proxy_set_header Host $updated_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_redirect off;
        proxy_buffering off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 86400;

        proxy_connect_timeout 5s;

        proxy_intercept_errors on;
        error_page 401 403 502 504 = @error;
    }

    location @error {
    	return 302 $updated_scheme://$updated_host@workshop_base_path@/error;
    }

    location / {
        proxy_pass http://workshop;

	# don't set Host, notebook dispatches off domain
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_redirect off;
        proxy_buffering off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 86400;
    }

    listen 80;
    listen [::]:80;
}

map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
    server_name ukbb-rg.*;

    location /rg_browser {
        proxy_pass http://ukbb-rg-browser.ukbb-rg;

	proxy_http_version 1.1;
	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection $connection_upgrade;
	proxy_read_timeout 20d;
	proxy_buffering off;
    }

    location / {
        proxy_pass http://ukbb-rg-static.ukbb-rg;
    }

    listen 80;
    listen [::]:80;
}

server {
    server_name auth.*;

    location / {
        proxy_pass http://auth/;

        proxy_set_header Host $updated_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    listen 80;
    listen [::]:80;
}

server {
    server_name blog.*;
    client_max_body_size 8m;

    location / {
        proxy_pass http://blog/;

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $updated_host;
        proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
    }

    listen 80;
    listen [::]:80;
}

